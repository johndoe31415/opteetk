#!/usr/bin/env python3
#	opteetk - Tools for easier debugging of OP-TEE
#	Copyright (C) 2023-2023 Johannes Bauer
#
#	This file is part of opteetk.
#
#	opteetk is free software; you can redistribute it and/or modify
#	it under the terms of the GNU General Public License as published by
#	the Free Software Foundation; this program is ONLY licensed under
#	version 3 of the License, later versions are explicitly excluded.
#
#	opteetk is distributed in the hope that it will be useful,
#	but WITHOUT ANY WARRANTY; without even the implied warranty of
#	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#	GNU General Public License for more details.
#
#	You should have received a copy of the GNU General Public License
#	along with opteetk; if not, write to the Free Software
#	Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
#
#	Johannes Bauer <JohannesBauer@gmx.de>

import sys
import re
from FriendlyArgumentParser import FriendlyArgumentParser
from Device import Device

parser = FriendlyArgumentParser(description = "Resolve addresses inside a logfile.")
parser.add_argument("-v", "--verbose", action = "count", default = 0, help = "Increases verbosity. Can be specified multiple times to increase.")
parser.add_argument("device", help = "Interpret offsets according to given device.")
parser.add_argument("logfile", nargs = "?", help = "Logfile to parse and heuristically scan for fitting replacements. If omitted, interactive console is presented.")
args = parser.parse_args(sys.argv[1:])

device = Device.load_from_file(args.device)
if args.logfile is None:
	while True:
		addr = input("Address: ")
		try:
			value = device.parse_value(addr)
			print(device.fmt_address(value))
		except ValueError as e:
			print(f"ValueError: {e}")
else:
	with open(args.logfile) as f:
		text = f.read()
	def replace_fnc(mtch):
		value = device.parse_value(mtch.group(0))
		return device.fmt_address(value)
	text = re.sub("0x[a-f0-9]+", replace_fnc, text, flags = re.IGNORECASE)
	print(text)
